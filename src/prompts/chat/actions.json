[
    {
      "name": "getPetById",
      "description": "Returns a single pet",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "properties": {
              "petId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of pet to return"
              }
            },
            "required": [
              "petId"
            ]
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "updatePetWithForm",
      "description": "",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "properties": {
              "petId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of pet that needs to be updated"
              }
            },
            "required": [
              "petId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of pet that needs to be updated"
              },
              "status": {
                "type": "string",
                "description": "Status of pet that needs to be updated"
              }
            },
            "required": []
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "findPetsByStatus",
      "description": "Multiple status values can be provided with comma separated strings",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "default": "available",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ],
                "description": "Status values that need to be considered for filter"
              }
            },
            "required": []
          }
        },
        "required": []
      }
    },
    {
      "name": "findPetsByTags",
      "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tags to filter by"
              }
            },
            "required": []
          }
        },
        "required": []
      }
    },
    {
      "name": "getInventory",
      "description": "Returns a map of status codes to quantities",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "getOrderById",
      "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "properties": {
              "orderId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of order that needs to be fetched"
              }
            },
            "required": [
              "orderId"
            ]
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "getUserByName",
      "description": "",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The name that needs to be fetched. Use user1 for testing. "
              }
            },
            "required": [
              "username"
            ]
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "loginUser",
      "description": "",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The user name for login"
              },
              "password": {
                "type": "string",
                "description": "The password for login in clear text"
              }
            },
            "required": []
          }
        },
        "required": []
      }
    },
    {
      "name": "logoutUser",
      "description": "",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "addPet",
      "description": "Add a new pet to the store",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "uploadFile",
      "description": "",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "properties": {
              "petId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of pet to update"
              }
            },
            "required": [
              "petId"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "additionalMetadata": {
                "type": "string",
                "description": "Additional Metadata"
              }
            },
            "required": []
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "placeOrder",
      "description": "Place a new order in the store",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "createUser",
      "description": "This can only be done by the logged in user.",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "createUsersWithListInput",
      "description": "Creates list of users with given input array",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    }
  ]